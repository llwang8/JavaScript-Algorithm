//Interview Cake

/*==================================
Suppose we could access yesterday's stock prices as an array, where:

The indices are the time in minutes past trade opening time, which was 9:30am local time.
The values are the price in dollars of Apple stock at that time.
So if the stock cost $500 at 10:30am, stockPricesYesterday[60] = 500.

Write an efficient function that takes stockPricesYesterday and returns the best profit I could
have made from 1 purchase and 1 sale of 1 Apple stock yesterday.
    var stockPricesYesterday = [10, 7, 5, 8, 11, 9];

    getMaxProfit(stockPricesYesterday);
// returns 6 (buying for $5 and selling for $11)
====================================*/
var stockPricesYesterday = [10, 7, 5, 8, 11, 9];
function getMaxProfit(stockPriceArray){
    var maxProfit = 0;
    var maxIndex = 0;
    if (stockPriceArray.length === 0) {
        return "invalid entry to calculate profit";
    }
    for (var i=0; i< stockPriceArray.length; i++){
        var temp = stockPriceArray.slice(i).reduce(function(max, current){
            return max < current)? current - stockPriceArray[i] : max;
        });
        if (maxProfit < temp){
            maxProfit = temp;
            maxBuyIndex = i;
        }
    }
}
getMaxProfit(stockPricesYesterday)
function getMaxProfit2(stockPriceArray){
    var maxProfit = 0;
    var maxIndex = 0;
    var minPrice = 0;
    var minIndex = 0;
    for (var i=0; i< stockPriceArray.length; i++){
        currentPrice = stockPriceArray[i];
        minPrice = Math.min(minPrice, currentPrice);
        maxProfit = Math.max(maxProfit, currentPrice - minPrice);
    }
    return maxProfit;
}
/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/






/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/







/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/









/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/





/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/





/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/






/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/






/*==================================

====================================*/




/*==================================

====================================*/




/*==================================

====================================*/

